on:
  push:
    # Deploy 'main' to dev.
    branches:
      - main

  # Run tests for any PRs.
  pull_request:

permissions:
  pull-requests: write
  contents: write

env:
  ARTIFACT_NAME: podger-depreciations

concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Install Dependencies
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Run Unit Tests
        run: npm test
        env:
          CI: true

      - name: Build
        run: npm run build --if-present

      - name: Setup GCloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          version: latest
          service_account_key: ${{ secrets.GCLOUD_API_KEYFILE }}
          project_id: ${{ secrets.GCLOUD_PROJECT }}
          export_default_credentials: true

      - name: Run Integration Tests
        run: npm run test:integration --if-present
        env:
          CI: true

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  package-push:
    name: Package and Push
    needs: build
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: Setup GCloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          version: latest
          service_account_key: ${{ secrets.GCLOUD_API_KEYFILE }}
          project_id: ${{ secrets.GCLOUD_PROJECT }}
          export_default_credentials: true

      - name: Package
        run: >
          zip ${ARTIFACT_NAME}-${GITHUB_SHA:0:7}.zip
          package.json
          package-lock.json
          dist/*.js

      - name: Push to GCS
        run: >
          gsutil cp
          ${ARTIFACT_NAME}-${GITHUB_SHA:0:7}.zip
          gs://${{ secrets.ARTIFACTS_BUCKET_NAME }}/${ARTIFACT_NAME}/${ARTIFACT_NAME}-${GITHUB_SHA:0:7}.zip

      - name: Copy as latest
        run: >
          gsutil cp
          gs://${{ secrets.ARTIFACTS_BUCKET_NAME }}/${ARTIFACT_NAME}/${ARTIFACT_NAME}-${GITHUB_SHA:0:7}.zip
          gs://${{ secrets.ARTIFACTS_BUCKET_NAME }}/${ARTIFACT_NAME}/${ARTIFACT_NAME}-latest.zip

  deploy:
    name: Deploy to Cloud Functions
    needs: package-push
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup GCloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          version: latest
          service_account_key: ${{ secrets.GCLOUD_API_KEYFILE }}
          project_id: ${{ secrets.GCLOUD_PROJECT }}
          export_default_credentials: true

      - name: Deploy
        run: >
          gcloud functions deploy ${{ secrets.FUNCTION_NAME }}
          --quiet
          --region europe-west1
          --runtime nodejs16
          --trigger-http
          --memory 256MB
          --source gs://${{ secrets.ARTIFACTS_BUCKET_NAME }}/${ARTIFACT_NAME}/${ARTIFACT_NAME}-latest.zip
          --entry-point main

  dependabot:
    name: Dependabot
    needs: build # If build fails, it won't merge the PR
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request' }} # Detect that the PR author is dependabot
    steps:
      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v1

      - name: Enable auto-merge for Dependabot PRs
        if: ${{ steps.dependabot-metadata.outputs.update-type != 'version-update:semver-major' }}
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
